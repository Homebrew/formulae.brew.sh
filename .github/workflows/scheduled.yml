name: Scheduled regeneration
on:
  push:
    paths:
      - .github/workflows/scheduled.yml
  schedule:
    # Once every hour
    - cron: "0 * * * *"

concurrency:
  group: scheduled
  cancel-in-progress: true

jobs:
  generate:
    if: startsWith( github.repository, 'Homebrew/' )
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04]
    steps:
      - name: Check out repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Set up dependency stubs
        if: matrix.os == 'ubuntu-22.04'
        run: |
          # create stubs so build dependencies aren't incorrectly flagged as missing
          for i in python svn unzip xz
          do
            sudo touch /usr/bin/$i
            sudo chmod +x /usr/bin/$i
          done

      - name: Configure Git user
        uses: Homebrew/actions/git-user-config@master
        with:
          username: BrewTestBot

      - name: Set up Ruby
        if: matrix.os == 'ubuntu-22.04'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Set up analytics
        env:
          ANALYTICS_JSON_KEY: ${{ secrets.HOMEBREW_FORMULAE_BREW_SH_ANALYTICS_JSON_KEY }}
        run: echo "$ANALYTICS_JSON_KEY" > ~/.homebrew_analytics.json

      - name: Update data for homebrew/core and homebrew/cask
        if: matrix.os == 'macos-latest'
        run: |
          /usr/bin/rake

          brew update-reset $(brew --repository homebrew/cask)
          /usr/bin/rake cask

          /usr/bin/rake api_samples

          git reset origin/master
          git add _data/formula{,_canonical.json} _data/bottle api/formula api/bottle formula
          if ! git diff --no-patch --exit-code HEAD -- _data/analytics _data/formula{,_canonical.json} _data/bottle api/formula api/bottle formula cask; then
            git commit -m "formula: updates from homebrew/core" _data/analytics _data/formula{,_canonical.json} _data/bottle api/formula api/bottle formula cask
          fi

          git add _data/cask api/cask api/cask-source cask
          if ! git diff --no-patch --exit-code HEAD -- _data/cask api/cask api/cask-source cask; then
            git commit -m "cask: updates from homebrew/cask" _data/cask api/cask api/cask-source cask
          fi

          git add _includes/api-samples
          if ! git diff --no-patch --exit-code HEAD -- _includes/api-samples; then
            git commit -m "docs: update API samples" _includes/api-samples
          fi

      - name: Update analytics data for Homebrew/linuxbrew-core
        if: matrix.os == 'ubuntu-22.04'
        run: |
          rake linux_analytics

          git reset origin/master
          git add _data/analytics-linux
          if ! git diff --no-patch --exit-code HEAD -- _data/analytics-linux; then
            git commit -m "analytics-linux: Updates from Linuxbrew's GA" _data/analytics-linux
          fi

      - name: Push commits
        uses: Homebrew/actions/git-try-push@master
  build:
    needs: generate
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Git repository
        uses: actions/checkout@master

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Install RubyGems
        run: |
          gem install bundler -v "~>1"
          bundle install --jobs 4 --retry 3

      - name: Generate site
        run: bundle exec rake formulae cask

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
  deploy:
    needs: build
    if: ${{ github.ref_name == 'master' }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
